#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class BasicEnglish < Racc::Parser

module_eval(<<'...end basic_english.y/module_eval...', 'basic_english.y', 40)
  
  def parse(str)
    @q = []
    until str.empty?
      case str
      when /\A\s+/
      when /\A(\w+?ing)/i
        @q.push [:GERUND, $&]
      when /\A(I|we|he|she|it|they|you)/i
        @q.push [:PRONOUN, $&]
      when /\A(my|our|his|her|its|their|your)/i
        @q.push [:POSS_PRONOUN, $&]
      when /\A(at|on|to|in|by|of|out|as)/i
        @q.push [:PREP, $&]
      when /\A(very|yesterday|tomorrow|\w+?ly)/i
        @q.push [:ADV, $&]
      when /\A(a|an|the)/i
        @q.push [:ARTICLE, $&]
      when /\A(dog|cat|mom|sister|house|store|car|food)/i
        @q.push [:NOUN, $&]
      when /\A(happy|sad|red|fast|slow|big|small)/i
        @q.push [:ADJ, $&]
      when /\A(walk|go|want|eat|be|like)/i
        @q.push [:VERB, $&]
      when /\A./
        @q.push [$&, $&]
      end
      str = $'
    end
    @q.push [false, '$end']
    do_parse
  end

  def next_token
    @q.shift
  end

...end basic_english.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     4,    14,     9,    15,    22,     7,     8,     7,     8,    14,
    17,    15,     7,     8,     7,     8,    25,    18 ]

racc_action_check = [
     0,     3,     1,     3,    14,     0,     0,    14,    14,    10,
     6,    10,    22,    22,    15,    15,    16,     9 ]

racc_action_pointer = [
    -2,     2,   nil,    -2,   nil,   nil,     1,   nil,   nil,    17,
     6,   nil,   nil,   nil,     0,     7,    10,   nil,   nil,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -23,    -1,   -23,    -4,    -5,   -22,   -19,   -20,   -23,
    -3,    -7,    -8,    -9,   -12,   -23,   -23,   -21,    28,    -6,
   -10,   -11,   -17,   -14,   -15,   -18,   -13,   -16 ]

racc_goto_table = [
     5,    11,     1,    10,     2,     3,    20,    21,    19,    26,
    16,   nil,   nil,   nil,    23,    24,   nil,   nil,   nil,   nil,
   nil,   nil,    27 ]

racc_goto_check = [
     5,     6,     1,     4,     2,     3,     9,    10,     6,    11,
    13,   nil,   nil,   nil,     5,     5,   nil,   nil,   nil,   nil,
   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     2,     4,     5,     0,     0,    -2,   nil,   nil,    -8,
    -7,   -13,   nil,     4 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,    13,   nil,
   nil,   nil,     6,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 11, :_reduce_none,
  0, 11, :_reduce_none,
  2, 12, :_reduce_none,
  1, 13, :_reduce_none,
  1, 13, :_reduce_none,
  2, 14, :_reduce_none,
  1, 14, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  2, 17, :_reduce_none,
  1, 19, :_reduce_none,
  0, 19, :_reduce_none,
  2, 20, :_reduce_none,
  1, 20, :_reduce_none,
  2, 18, :_reduce_none,
  1, 21, :_reduce_none,
  0, 21, :_reduce_none,
  3, 15, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 23, :_reduce_none,
  0, 23, :_reduce_none ]

racc_reduce_n = 23

racc_shift_n = 28

racc_token_table = {
  false => 0,
  :error => 1,
  :PRONOUN => 2,
  :VERB => 3,
  :GERUND => 4,
  :PREP => 5,
  :NOUN => 6,
  :ARTICLE => 7,
  :POSS_PRONOUN => 8,
  :ADJ => 9 }

racc_nt_base = 10

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PRONOUN",
  "VERB",
  "GERUND",
  "PREP",
  "NOUN",
  "ARTICLE",
  "POSS_PRONOUN",
  "ADJ",
  "$start",
  "target",
  "sentence",
  "subject",
  "predicate",
  "noun_clause",
  "clause",
  "direct_object_phrase",
  "prepositional_phrase",
  "opt_gerund_phrase_or_noun",
  "gerund_phrase_or_noun",
  "opt_noun_clause",
  "art_or_poss",
  "opt_adj" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class BasicEnglish


parser = BasicEnglish.new
while true
  puts
  print '> '
  str = gets.chop!
  break if /q/i =~ str
  begin
    puts "= #{parser.parse(str)}"
  rescue ParseError
    puts $!
  end
end
